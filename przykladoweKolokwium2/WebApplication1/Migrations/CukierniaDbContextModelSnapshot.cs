// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Models;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(CukierniaDbContext))]
    partial class CukierniaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-preview.5.20278.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication1.Models.Klient", b =>
                {
                    b.Property<int>("IdKlient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nazwisk")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdKlient");

                    b.ToTable("Klient");

                    b.HasData(
                        new
                        {
                            IdKlient = 1,
                            Imie = "Ala",
                            Nazwisk = "Kota"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Pracownik", b =>
                {
                    b.Property<int>("IdPracown")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPracown");

                    b.ToTable("Pracownik");

                    b.HasData(
                        new
                        {
                            IdPracown = 1,
                            Imie = "Ola",
                            Nazwisko = "Koti"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.WyrobCukierniczy", b =>
                {
                    b.Property<int>("IdWyrobuCukierniczego")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("CenaZaSzt")
                        .HasColumnType("real");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Typ")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("IdWyrobuCukierniczego");

                    b.ToTable("WyrobCukierniczy");

                    b.HasData(
                        new
                        {
                            IdWyrobuCukierniczego = 1,
                            CenaZaSzt = 6f,
                            Nazwa = "ciastko",
                            Typ = "kot"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Zamowienie", b =>
                {
                    b.Property<int>("IdZamowienia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataPrzyjecia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataRealizacji")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdKlient")
                        .HasColumnType("int")
                        .HasAnnotation("ForeignKey", "IdKlient");

                    b.Property<int>("IdPracownik")
                        .HasColumnType("int")
                        .HasAnnotation("ForeignKey", "IdPracown");

                    b.Property<int?>("KlientIdKlient")
                        .HasColumnType("int");

                    b.Property<int?>("PracownikIdPracown")
                        .HasColumnType("int");

                    b.Property<string>("Uwagi")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("IdZamowienia");

                    b.HasIndex("KlientIdKlient");

                    b.HasIndex("PracownikIdPracown");

                    b.ToTable("Zamowienie");

                    b.HasData(
                        new
                        {
                            IdZamowienia = 1,
                            DataPrzyjecia = new DateTime(2020, 6, 15, 21, 27, 37, 625, DateTimeKind.Local).AddTicks(1885),
                            DataRealizacji = new DateTime(2020, 6, 15, 21, 27, 37, 628, DateTimeKind.Local).AddTicks(8962),
                            IdKlient = 1,
                            IdPracownik = 1,
                            Uwagi = "aalaaaa"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Zamowienie_WyrobCukierniczy", b =>
                {
                    b.Property<int>("IdZamowienia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("ForeignKey", "IdZamowienia")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdWyrobuCukierniczego")
                        .HasColumnType("int")
                        .HasAnnotation("ForeignKey", "IdWyrobuCukierniczego");

                    b.Property<int>("Ilosc")
                        .HasColumnType("int");

                    b.Property<string>("Uwagi")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int?>("WyrobCukierniczyIdWyrobuCukierniczego")
                        .HasColumnType("int");

                    b.Property<int?>("ZamowienieIdZamowienia")
                        .HasColumnType("int");

                    b.HasKey("IdZamowienia");

                    b.HasIndex("WyrobCukierniczyIdWyrobuCukierniczego");

                    b.HasIndex("ZamowienieIdZamowienia");

                    b.ToTable("Zamowienie_WyrobCukierniczy");

                    b.HasData(
                        new
                        {
                            IdZamowienia = 1,
                            IdWyrobuCukierniczego = 1,
                            Ilosc = 2,
                            Uwagi = "aaaaaa"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Zamowienie", b =>
                {
                    b.HasOne("WebApplication1.Models.Klient", "Klient")
                        .WithMany("Zamowienie")
                        .HasForeignKey("KlientIdKlient");

                    b.HasOne("WebApplication1.Models.Pracownik", "Pracownik")
                        .WithMany("Zamowienie")
                        .HasForeignKey("PracownikIdPracown");
                });

            modelBuilder.Entity("WebApplication1.Models.Zamowienie_WyrobCukierniczy", b =>
                {
                    b.HasOne("WebApplication1.Models.WyrobCukierniczy", "WyrobCukierniczy")
                        .WithMany("ZamowienieWyrobCukierniczie")
                        .HasForeignKey("WyrobCukierniczyIdWyrobuCukierniczego");

                    b.HasOne("WebApplication1.Models.Zamowienie", "Zamowienie")
                        .WithMany("ZamowienieWyrobCukierniczie")
                        .HasForeignKey("ZamowienieIdZamowienia");
                });
#pragma warning restore 612, 618
        }
    }
}
